# variables
/control/alias f 8
/control/alias g 0
/control/alias n 100000000
/control/alias z 83
/control/alias a 207
#/control/alias e 1633.356
#/control/alias e_str 1633keV
/control/alias e 0
/control/alias e_str 0keV
#/control/alias cut 1
/control/alias runno 81
/control/alias half_target_thickness 500
/control/alias File ICESPICE_RadDecay_z{z}_a{a}_e{e_str}_f{f}mm_g{g}mm_n{n}_PIPS1000_AllProcesses_SiWindow50nm_Source{half_target_thickness}nmThick_run{runno}

# Set the verbosity levels of different components of the simulation: 0=no output, 1,2,3 = more information
/control/verbose 0         # output for general control commands
/run/verbose 0             # output for the run manager (initialization, execution)
/event/verbose 0           # output for event-level processes (tracking within events)
/tracking/verbose 0        # output for particle tracking processes

# Initialize the run manager (prepare the simulation geometry and physics)
/run/initialize

#/run/setCut {cut} micrometer

# Set a very high time threshold for decays to allow all radioactive decays to happen without prematurely stopping
#/process/had/rdm/thresholdForVeryLongDecayTime 1.0e+60 year # currently hardcoded

/process/had/rdm/setRadioactiveDecayFile 83 207 ../UserData/UserRadData_z83.a207 # Add a user defined radioactive decay file

/ICESPICE/DetectorPosition -{g}          # Position the detector
/ICESPICE/SourcePosition {f}     # Position the 207Bi source backing 

### For internal decay

# Set up the General Particle Source (GPS) parameters
/gps/ang/type iso                      # Set the particle angular distribution to isotropic (equal probability in all directions)

# Define the cylindrical source volume
/gps/pos/type Volume
/gps/pos/shape Cylinder
/gps/pos/radius 2.5 mm       # Radius is half of the diameter (5 mm)
/gps/pos/halfz {half_target_thickness} nanometer      # Half of the height (aligned along z-axis)

#/gps/pos/type Point                    # Set the GPS source position type to a point source

/gps/particle ion                      # Set the particle type to an ion
/gps/ion {z} {a} 0 {e}                 # Define the ion 
/gps/ene/type Mono                     # Set a monoenergetic energy distribution (all particles have the same energy)
/gps/ene/mono 0 eV                     # Set the energy of the particles to 0 eV (since radioactive decay will handle energy)

# Set the output file name for analysis results
/analysis/setFileName {File}

# Print progress every # events during the simulation run
/run/printProgress 100000

# Begin the simulation with # particles
/run/beamOn {n}

/control/shell cp {File}.root ../207Bi/geant_sim/
#/control/shell git add ../207Bi/geant_sim/{File}.root && git commit -m "Add {File}.root" && git push

/control/shell python3 ../207Bi/analysis.py {File}.root --fwhm 10 --save-pic


