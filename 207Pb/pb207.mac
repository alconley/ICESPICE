# variables
/control/alias f 70
/control/alias g 25
/control/alias n 100000000
/control/alias z 82
/control/alias a 207
/control/alias e 1633.356
/control/alias e_str 1633keV
/control/alias runno 93

/control/alias File run{runno}_RadDecay_z{z}_a{a}_e{e_str}_f{f}mm_g{g}mm_n{n}_PointSource_PIPS300_6N42_1x1x1_16in

# Set the verbosity levels of different components of the simulation: 0=no output, 1,2,3 = more information
/control/verbose 0         # output for general control commands
/run/verbose 0             # output for the run manager (initialization, execution)
/event/verbose 0           # output for event-level processes (tracking within events)
/tracking/verbose 0        # output for particle tracking processes

# Initialize the run manager (prepare the simulation geometry and physics)
/run/initialize

/ICESPICE/DetectorPosition -{g}          # Position the detector
/ICESPICE/SourcePosition {f}

# Set up the General Particle Source (GPS) parameters
/gps/ang/type iso                      # Set the particle angular distribution to isotropic (equal probability in all directions)
/gps/pos/type Point                    # Set the GPS source position type to a point source

/gps/particle ion                      # Set the particle type to an ion
/gps/ion {z} {a} 0 {e}                 # Define the ion 
/gps/ene/type Mono                     # Set a monoenergetic energy distribution (all particles have the same energy)
/gps/ene/mono 0 eV                     # Set the energy of the particles to 0 eV (since radioactive decay will handle energy)

# Set the output file name for analysis results
/analysis/setFileName {File}

# Print progress every # events during the simulation run
/run/printProgress 10000000

# Begin the simulation with # particles
/run/beamOn {n}
#
/control/shell cp {File}.root ../207Pb/
/control/shell python3 ../207Pb/analysis.py {File}.root --fwhm 10 --save-pic --icespice




